SHIFT_ON	PROC;(1=DOWN)
	AND	AH,1
	MOV	CS:[SHIFT_FLAG],AH
	CLD
	TEST	AH,1
	JZ	SHIFT_ON_1
	XOR	AH,AH
	STD
SHIFT_ON_1:
	LES	DI,DWORD PTR CS:[VTBL]
	MOV	BYTE PTR CS:[FON+1],BH
	MOV	BP,AX

	PUSH	CX
	PUSH	DX
	TEST	CS:[SHIFT_FLAG],1
	JZ	SHIFT_ON_2
	MOV	CX,DX
SHIFT_ON_2:
	XOR	AX,AX
	XCHG	AL,CH
	MOV	BX,CS:[VTBL+6]
	MUL	BX
	ADD	AX,CX
	SHL	AX,1
	SHL	BX,1
	ADD	DI,AX
	MOV	SI,DI
	PUSH	ES
	POP	DS
	POP	DX
	POP	CX

	SUB	DL,CL
	JS	SHIFT_ON_EXIT
	SUB	DH,CH
	JS	SHIFT_ON_EXIT
	INC	DH
	INC	DL
	XOR	CX,CX
	XCHG	CL,DH;CX-Y ;DX-X

	OR	BP,BP
	JNZ	SHIFT_ON_7
	MOV	BP,CX
SHIFT_ON_7:

	PUSH	DX
	MOV	AX,BX
	MUL	BP
	TEST	CS:[SHIFT_FLAG],1
	JZ	SHIFT_ON_3
	NEG	AX
	NEG	BX
SHIFT_ON_3:
	ADD	SI,AX
	POP	DX	

	SUB	CX,BP
	JBE	SHIFT_ON_5

SHIFT_ON_4:
	PUSH	CX
	PUSH	DI
	PUSH	SI
	MOV	CX,DX
	REP	MOVSW
	POP	SI
	POP	DI
	ADD	SI,BX
	ADD	DI,BX
	POP	CX
	LOOP	SHIFT_ON_4
SHIFT_ON_5:
	MOV	AX,CS:[FON]
	MOV	CX,BP
	MOV	SI,DI
SHIFT_ON_6:
	PUSH	CX
	PUSH	DI
	MOV	CX,DX
	REP	STOSW
	POP	DI
	POP	CX
	ADD	DI,BX
	MOV	SI,DI
	LOOP	SHIFT_ON_6
SHIFT_ON_EXIT:
	RET
SHIFT_FLAG	DB	0
FON	DW	0
ENDP
