SORT_AND_PRINT_WORD     PROC    NEAR
	PUSH	AX
	PUSH	CX
	PUSH	DX
	PUSH	SI
	PUSH	BP
	PUSH	DS
	MOV	WORD PTR CS:[X_A_],0
	MOV	WORD PTR CS:[Y_A_],0
	CALL	ZERO
	MOV	AL,CS:[SCREEN_]
	MOV	DX,10
	MOV	CX,38
	CMP	AL,1
	JE	SORT_OK_1
	SUB	CX,CS:[FOR_LEN_SECOND_WINDOW_]
	CMP	AL,2
	JE	SORT_OK_1
	SUB	CX,CS:[FOR_LEN_THIRD_WINDOW_]
SORT_OK_1:
	MOV	CS:[X_MAX_],CX
	MOV	CS:[Y_MAX_],DX
	XOR	CX,CX
SORT_1:
	MOV	AL,[BX]
	OR	AL,AL
	JZ	SORT_END
	CMP	AL,0DH
	JE	SORT_ENTER
	INT	50
	INC	BX
	INC	CX
	JMP	SHORT SORT_1
SORT_ENTER:
	PUSH	DX
	XOR	DX,DX
	MOV	AX,CX
	DIV	CS:[X_MAX_]
	XOR	DX,DX
	INC	AX
	MUL	CS:[X_MAX_]
	MOV	CX,AX
	POP	DX
	MOV	CS:[X_A_],0
	INC	CS:[Y_A_]
	INC	BX
	JMP	SHORT SORT_1
SORT_END:
	PUSH	BX
	MOV	SI,CS:[X_MAX_]
	MOV	AX,CX
	XOR	DX,DX
	OR	AX,AX
	JZ	SORT_END_2
	DEC	AX
	DIV	SI
;	INC	DX
;	OR	AX,AX
;	JZ	SORT_END_1
	MOV	DX,SI
SORT_END_1:
	INC	AX
	MOV	CX,AX
	MOV	AX,CS:[Y_]
	MOV	BX,CS:[X_]
	INC	AX
	INC	BX
	CMP	BYTE PTR CS:[SCREEN_],1
	JE	SORT_END_3
	ADD	AX,12
	CMP	BYTE PTR CS:[SCREEN_],2
	JE	SORT_END_3
	ADD	BX,26
SORT_END_3:
	MOV	BP,3
	XCHG	CX,BP
	ROL	AX,CL
	ROL	BX,CL
	ROL	BP,CL
	ROL	DX,CL
	XCHG	CX,BP
	XOR	SI,SI
	MOV	DS,CS:[LEAVE_BLOCK_]
	INT	88
SORT_END_2:
	MOV	AX,CS:[X_]
	ADD	AX,CS:[X_A_]
	MOV	CS:[X_],AX
	MOV	AX,CS:[Y_]
	ADD	AX,CS:[Y_A_]
	MOV	CS:[Y_],AX
	POP	BX
	POP	DS
	POP	BP
	POP	SI
	POP	DX
	POP	CX
	POP	AX
	RET
FOR_LEN_SECOND_WINDOW_	DW	14
FOR_LEN_THIRD_WINDOW_	DW	12
SORT_AND_PRINT_WORD     ENDP
