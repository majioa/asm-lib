

CLEAR_FIRST_WINDOW	MACRO
	MOV	BX,8
	MOV	DX,BX
	MOV	SI,38*8
	MOV	DI,10*8
	MOV	[PAPER_],BLUE
	CALL	CLEAR_WINDOW
ENDM

CLEAR_SECOND_WINDOW	MACRO
	MOV	BX,8
	MOV	DX,104
	MOV	SI,24*8
	MOV	DI,10*8
	MOV	[PAPER_],BLUE
	CALL	CLEAR_WINDOW
ENDM

CLEAR_THIRD_WINDOW	MACRO
	MOV	BX,27*8
	MOV	DX,104
	MOV	SI,12*8
	MOV	DI,10*8
	MOV	[PAPER_],BLUE
	CALL	CLEAR_WINDOW
ENDM

CREATE_FIRST_WINDOW	MACRO
	XOR	AX,AX
	XOR	BX,BX
	MOV	CX,12
	MOV	DX,40
	mov	byte ptr cs:[paper_],0
	mov	byte ptr cs:[ink_],7
	CALL	CREATE_WINDOW
ENDM
CREATE_SECOND_WINDOW	MACRO
	MOV	AX,12
	XOR	BX,BX
	MOV	CX,AX
	MOV	DX,26
	mov	byte ptr cs:[paper_],0
	mov	byte ptr cs:[ink_],7
	CALL	CREATE_WINDOW
ENDM
CREATE_THIRD_WINDOW	MACRO
	MOV	AX,12
	MOV	BX,26
	MOV	CX,12
	MOV	DX,14
	mov	byte ptr cs:[paper_],black
	mov	byte ptr cs:[ink_],white
	CALL	CREATE_WINDOW
ENDM

PRINT_BEGINNING_INFO	MACRO
	MOV	BYTE PTR [SCREEN_],1
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],0
	MOV	[PAPER_],BLUE
	MOV	[INK_],RED
	LEA	BX,BEGIN_INFO_
	CALL	SORT_AND_PRINT_WORD
ENDM
PRINT_WRITING_QUESTIONS	MACRO
	MOV	BYTE PTR [SCREEN_],3
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],0
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA	BX,WRITING_QUESTIONS_
	CALL	SORT_AND_PRINT_WORD
ENDM
PRINT_WRITING_ANSWERS	MACRO
	MOV	BYTE PTR [SCREEN_],3
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],2
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA 	BX,WRITING_RIGHT_ANSWERS_
	CALL	SORT_AND_PRINT_WORD
ENDM
PRINT_WRITING_MARK	MACRO
	MOV	BYTE PTR [SCREEN_],3
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],4
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA 	BX,WRITING_MARK_
	CALL	SORT_AND_PRINT_WORD
ENDM
PRINT_NUMBER_QUESTIONS	MACRO
	MOV	BYTE PTR [SCREEN_],3
	MOV	WORD PTR [X_],6
	MOV	WORD PTR [Y_],1
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA	BX,NUMBER_OF_ASKED_QUESTIONS_
	CALL	SORT_AND_PRINT_DIGIT
ENDM
PRINT_NUMBER_RIGHT_ANSWERS	MACRO
	MOV	BYTE PTR [SCREEN_],3
	MOV	WORD PTR [X_],8
	MOV	WORD PTR [Y_],3
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA	BX,NUMBER_OF_RIGHT_ANSWERS_
	CALL	SORT_AND_PRINT_DIGIT
ENDM
PRINT_MARK	MACRO
	MOV	BYTE PTR [SCREEN_],3
	MOV	WORD PTR [X_],7
	MOV	WORD PTR [Y_],4
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA	BX,MARK_
	CALL	SORT_AND_PRINT_DIGIT
ENDM
PRINT_CREDITS	MACRO
	MOV	BYTE PTR [SCREEN_],3
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],0
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA	BX,CREDITS_
	CALL	SORT_AND_PRINT_WORD
ENDM
PRINT_PRESS_ANY_KEY	MACRO
	MOV	BYTE PTR [SCREEN_],1
	MOV	WORD PTR [X_],0
	INC	WORD PTR [Y_]
	MOV	[PAPER_],BLUE
	MOV	[INK_],YELLOW
	LEA	BX,PRESS_ANY_KEY_
	CALL	SORT_AND_PRINT_WORD
ENDM
PRINT_PRESS_ANY_KEY_FOR_BEGIN	MACRO
	MOV	BYTE PTR [SCREEN_],1
	MOV	WORD PTR [X_],0
	INC	WORD PTR [Y_]
	MOV	[PAPER_],BLUE
	MOV	[INK_],GREEN
	LEA	BX,PRESS_ANY_KEY_FOR_BEGIN_TESTING_
	CALL	SORT_AND_PRINT_WORD
ENDM	
PRINT_RIGHT_ANSWER	MACRO
	MOV	BYTE PTR [SCREEN_],1
	MOV	WORD PTR [X_],0
	MOV	AX,[NEXT_Y_]
	INC	AX
	MOV	[Y_],AX
	MOV	[PAPER_],BLUE
	MOV	[INK_],MAGENTA
	LEA	BX,RIGHT_ANSWER_
	CALL	SORT_AND_PRINT_WORD
ENDM
PRINT_NOT_RIGHT_ANSWER_AND_RIGHT_ANSWER	MACRO
	MOV	BYTE PTR [SCREEN_],1
	MOV	WORD PTR [X_],0
	MOV	AX,[NEXT_Y_]
	INC	AX
	MOV	[Y_],AX
	MOV	[PAPER_],BLUE
	MOV	[INK_],MAGENTA
	LEA	BX,NOT_RIGHT_ANSWER_
	CALL	SORT_AND_PRINT_WORD
	MOV	AL,[DIGIT_OF_RIGHT_ANSWER_]
	ADD	AL,30H
	CALL	PRINT_SYMBOL
ENDM
PRINT_ANSWER_AGAIN	MACRO
	MOV	BYTE PTR [SCREEN_],1
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],0
	MOV	[PAPER_],BLUE
	MOV	[INK_],WHITE
	LEA	BX,ANSWER_AGAIN_
	CALL	SORT_AND_PRINT_WORD
ENDM

RND_N	MACRO
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	DX
	PUSH	DS
	PUSH	CS
	POP	DS
	MOV	BP,50
RND_N_1:
	OR	CX,CX
	JZ	RND_ERROR
	CALL	RND_GET
	MOV	DX,[RND_RESULT_]
	DEC	CX
	CMP	DX,[MAX_QUESTIONS_]
	JAE	RND_N_1	
	MOV	BX,[ADDR_ENABLE_QUESTIONS_]
	ADD	BX,DX
	CMP	BYTE PTR CS:[BX],0 ;0-NOT_ASKED
	JNZ	RND_N_1
RND_EXIT_1:
	MOV	[CURRENT_QUESTION_],DX
	JMP	SHORT RND_EXIT
RND_ERROR:
	MOV	BX,[ADDR_ENABLE_QUESTIONS_]
	XOR	DX,DX
RND_ERROR_1:
	CMP	BYTE PTR CS:[BX],0
	JZ	RND_EXIT_1
	INC	BX
	INC	DX
	JMP	RND_ERROR_1
RND_EXIT:
	MOV	BYTE PTR CS:[BX],0FFH
	POP	DS
	POP	DX
	POP	CX
	POP	BX
	POP	AX
ENDM

CALCULATE_MARK	MACRO
	PUSH	AX
	PUSH	BX
	PUSH	DX
	PUSH	DS
	PUSH	CS
	POP	DS
	MOV	AX,[NUMBER_OF_ASKED_QUESTIONS_]
	OR	AX,AX
	JZ	OK_MARK
	MOV	WORD PTR [MARK_],5
	MOV	DX,[NUMBER_OF_RIGHT_ANSWERS_]
	XCHG	AX,DX
	MOV	BX,DX
	MUL	WORD PTR [CALCULATE_MARK_100_]
	XOR	DX,DX
	DIV	BX
	CMP	AX,95
	JAE	OK_MARK
	DEC	WORD PTR [MARK_]
	CMP	AX,75
	JAE	OK_MARK
	DEC	WORD PTR [MARK_]
	CMP	AX,50
	JAE	OK_MARK
	DEC	WORD PTR [MARK_]
	CMP	AX,25
	JAE	OK_MARK
	DEC	WORD PTR [MARK_]
OK_MARK:
	POP	DS
	POP	DX
	POP	BX
	POP	AX
	JMP	SHORT MARK_1
CALCULATE_MARK_100_	DW	100
MARK_1:
ENDM

LOAD_QUESTION_OF_N	MACRO
	PUSH	AX
	PUSH	DX
	PUSH	DS
	PUSH	CS
	POP	DS
	MOV	AX,[ADDR_QUESTIONS_]
	MOV	BX,[CURRENT_QUESTION_]
	ROL	BX,1
	ADD	BX,AX
	MOV	BX,[BX]
	MOV	DX,[BX]
	MOV	[DIGIT_OF_RIGHT_ANSWER_],DL
	MOV	[NUMBER_OF_VARY_ANSWERS_],DH
	INC	BX
	INC	BX
	POP	DS
	POP	DX
	POP	AX
ENDM

PRINT_QUESTION_OF_N	MACRO
	PUSH	BX
	MOV	BYTE PTR [SCREEN_],1
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],0
	CALL	SORT_AND_PRINT_WORD
	POP	BX
ENDM

PRINT_VARIOUS_ANSWERS_OF_QUESTION	MACRO
	PUSH	AX
	PUSH	CX
	PUSH	DX
	
	DEC	BX
PRINT_VARIOUS_1:
	INC	BX
	MOV	AL,[BX]
	OR	AL,AL
	JNZ	PRINT_VARIOUS_1
	INC	BX
	XOR	CH,CH
	MOV	CL,[NUMBER_OF_VARY_ANSWERS_]
	MOV	WORD PTR [X_],0
	MOV	WORD PTR [Y_],0
	MOV	BYTE PTR [SCREEN_],2
	MOV	DL,'1'
PRINT_VARIOUS_3:
	PUSH	DX
	MOV	AL,DL
	CALL	PRINT_SYMBOL
	MOV	AL,':'
	CALL	PRINT_SYMBOL
	MOV	WORD PTR CS:[FOR_LEN_SECOND_WINDOW_],16
	CALL	SORT_AND_PRINT_WORD
	MOV	WORD PTR CS:[FOR_LEN_SECOND_WINDOW_],14
	INC	BX
	MOV	AX,[X_]
	OR	AX,AX
	JZ	PRINT_VARIOUS_2
	INC	WORD PTR [Y_]
	MOV	WORD PTR [X_],0
PRINT_VARIOUS_2:
	POP	DX
	INC	DL
	LOOP	PRINT_VARIOUS_3
	POP	DX
	POP	CX
	POP	AX
ENDM
	
ALL_SETTINGS	MACRO
	PUSH	DS
	
	MOV	CX,0FFFFH
	LEA	SI,FONT_FILE_NAME_
	LEA	DI,BUFFER_
	MOV	[ADRESS_FONT_],DI
	MOV	DX,DI
	CALL	LOAD_FILE
	mov	[addr_data_],di
	
	MOV	CX,0FFFFH
	LEA	SI,DATA_FILE_NAME_
	MOV	DX,DI
	CALL	LOAD_FILE
	
	MAP
	
	MOV	AX,DI
	CALL	CALCULATE_ADDR
	MOV	AX,ES
	INC	AX
	MOV	CS:[LEAVE_BLOCK_],AX
	
	MOV	AH,0
	MOV	AL,19
	INT	10H

	XOR	AX,AX
	MOV	DS,AX
	CLI
	INIT_INT_50
	INIT_INT_88
;	INIT_INT_9
	STI
	PUSH	CS
	POP	DS

	POP	DS
ENDM

POP_ALL_SETTINGS	MACRO
	MOV	AH,0
	MOV	AL,3
	INT	10H
poper_1:
	XOR	AX,AX
	MOV	DS,AX
	CLI
;	REST_INT_9
	REST_INT_50
	REST_INT_88
	STI
ENDM

MAP	MACRO
;MAP_ENABLE_QUESTIONS_
	
	PUSH	CS
	POP	DS
	PUSH	CS
	POP	ES
	mov	SI,[addr_data_]
	
	LODSW
	cmp	ax,quantity_of_questions
	ja	map_ok
	mov	ax,1
	jmp	write_error
map_ok:
	MOV	[MAX_QUESTIONS_],AX
	MOV	CX,AX
	MOV	BX,DI
	MOV	[ADDR_QUESTIONS_],DI
	ROL	CX,1
	ADD	DI,CX
	MOV	[ADDR_ENABLE_QUESTIONS_],DI
	ROR	CX,1
MAP_2:
	MOV	[BX],SI
	LODSW
	XOR	AL,AL
	STOSB
MAP_1:
	LODSB
	CMP	AL,0FEH
	JB	MAP_1
	INC	BX
	INC	BX
	LOOP	MAP_2
ENDM
CLEAR_SETUP_QUESTIONS	MACRO
	PUSH	AX
	PUSH	CX
	PUSH	DI
	PUSH	ES
	MOV	DI,CS:[ADDR_ENABLE_QUESTIONS_]
	MOV	CX,CS:[MAX_QUESTIONS_]
	PUSH	CS
	POP	ES
	XOR	AL,AL
	REPZ	STOSB
	POP	ES
	POP	DI
	POP	CX
	POP	AX
ENDM
CLEAR_MARKS	MACRO
	MOV	CS:[MARK_],0
	MOV	CS:[NUMBER_OF_ASKED_QUESTIONS_],0
	MOV	CS:[NUMBER_OF_RIGHT_ANSWERS_],0
ENDM