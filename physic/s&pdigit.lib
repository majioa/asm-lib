SORT_AND_PRINT_DIGIT	PROC	NEAR
	PUSH	AX
	PUSH	CX
	PUSH	DX
	PUSH	SI
	PUSH	BP
	PUSH	DS
	MOV	CS:[X_A_],0
	MOV	CS:[Y_A_],0
	CALL	ZERO
;	MOV	AX,CS:[X_]
;	MOV	CS:[X_A_],AX
;	MOV	AX,CS:[Y_]
;	MOV	CS:[Y_A_],AX
;	MOV	AL,CS:[SCREEN_]
;	MOV	DX,10
;	MOV	CX,38
;	CMP	AL,1
;	JE	P_N_D_OK_1
;	SUB	CX,CS:[FOR_LEN_SECOND_WINDOW_]
;	CMP	AL,2
;	JE	P_N_D_OK_1
;	SUB	CX,CS:[FOR_LEN_THIRD_WINDOW_]
P_N_D_OK_1:
	MOV	SI,10
	XOR	CX,CX
	MOV	AX,CS:[BX]
P_N_D1:
	XOR	DX,DX
	DIV	SI
	PUSH	DX
	INC	CX
	OR	AX,AX
	JZ	P_N_D3
	JMP	SHORT P_N_D1
P_N_D3:
	MOV	BP,CX
        MOV     CS:[X_MAX_],CX
        MOV     CS:[Y_MAX_],1

P_N_D2:
	POP	AX
	ADD	AL,30H
	INT	50
	LOOP	P_N_D2
	PUSH	BX

;	MOV	SI,CS:[X_MAX_]
;	MOV	AX,CX
;	OR	AX,AX
;	JZ	P_N_D_END_2
;	DEC	AX
;	DIV	SI
;	INC	DX
;	OR	AX,AX
;	JZ	P_N_D_END_1
;	MOV	DX,SI
	
	MOV	DX,BP	
	XOR	AX,AX	

P_N_D_END_1:
	INC	AX
	MOV	CX,AX
	MOV	AX,CS:[Y_]
	MOV	BX,CS:[X_]
	INC	AX
	INC	BX
	CMP	BYTE PTR CS:[SCREEN_],1
	JE	P_N_D_END_3
	ADD	AX,12
	CMP	BYTE PTR CS:[SCREEN_],2
	JE	P_N_D_END_3
	ADD	BX,26
P_N_D_END_3:
	MOV	BP,3
	XCHG	CX,BP
	ROL	AX,CL
	ROL	BX,CL
	ROL	BP,CL
	ROL	DX,CL
	XCHG	CX,BP
	XOR	SI,SI
	MOV	DS,CS:[LEAVE_BLOCK_]
	INT	88
P_N_D_END_2:
	MOV	AX,CS:[X_]
	ADD	AX,CS:[X_A_]
	MOV	CS:[X_],AX
	MOV	AX,CS:[Y_]
	ADD	AX,CS:[Y_A_]
	MOV	CS:[Y_],AX

	POP	BX
	POP	DS
	POP	BP
	POP	SI
	POP	DX
	POP	CX
	POP	AX
	RET
endp